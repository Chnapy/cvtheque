<?php

namespace CVThequeBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AdvertisementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class AdvertisementRepository extends EntityRepository
{
  public function getSelectList()
  {
    $qb = $this->createQueryBuilder('a')
               ->where('a.published = 1');

    return $qb;
  }

  public function getAdvertisements($numberByPage, $page)
  {
    if ((int) $page < 1) {
        throw new \InvalidArgumentException('L\'argument $page ne peut être inférieur à 1 (valeur : "'.$page.'").');
    }

    $query = $this->createQueryBuilder('a')
                  ->leftJoin('a.image', 'i')
                    ->addSelect('i')
                  ->where('a.published = 1')
                  ->orderBy('a.created', 'DESC')
                  ->getQuery();

    $query->setFirstResult(($page-1) * $numberByPage)
          ->setMaxResults($numberByPage);

    return new Paginator($query);
  }
  
  public function getSocietyAdvertisements($society, $numberByPage, $page)
  {
    if ((int) $page < 1) {
        throw new \InvalidArgumentException('L\'argument $page ne peut être inférieur à 1 (valeur : "'.$page.'").');
    }

    $query = $this->createQueryBuilder('a')
                  ->leftJoin('a.image', 'i')
                    ->addSelect('i')
                  ->leftJoin('a.society', 's')
                    ->addSelect('s')
                  ->where('s.id = '.$society->getId())
                  ->orderBy('a.created', 'DESC')
                  ->getQuery();

    $query->setFirstResult(($page-1) * $numberByPage)
          ->setMaxResults($numberByPage);

    return new Paginator($query);
  }
}